services:
  # База данных PostgreSQL
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: memgame_development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5



  # Rails приложение
  web:
    build: .
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://postgres:password@db:5432/memgame_development
      RAILS_ENV: development
      RAILS_MAX_THREADS: 5
    volumes:
      - .:/rails
      - bundle_cache:/usr/local/bundle
    command: >
      bash -c "
        bundle exec rails db:create || true &&
        bundle exec rails db:migrate &&
        bundle exec rails db:seed &&
        bundle exec rails server -b 0.0.0.0
      "

  # Delayed Job worker (единый для всех задач)
  delayed_job:
    build: .
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://postgres:password@db:5432/memgame_development
      RAILS_ENV: development
      TELEGRAM_BOT_TOKEN: "123456789:AAAA-fake-token-for-development"
      TZ: "Europe/Moscow"
    volumes:
      - .:/rails
      - bundle_cache:/usr/local/bundle
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    command: ["bundle", "exec", "rails", "jobs:work"]

  # Frontend watcher для автоматической пересборки
  frontend_watcher:
    image: node:18-alpine
    working_dir: /app
    volumes:
      - ./memgame_web:/app
      - ./public:/output
      - node_modules_cache:/app/node_modules
    command: sh -c "npm install && npm run watch-and-copy"
    depends_on:
      - web

volumes:
  postgres_data:
  bundle_cache:
  node_modules_cache: 