#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è MemGame
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/backup.sh [local|s3]

set -e

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BACKUP_DIR="/opt/memgame/backups"
DATE=$(date +%Y%m%d_%H%M%S)
BACKUP_FILE="memgame_backup_${DATE}.sql"
DOCKER_COMPOSE="docker-compose -f docker-compose.prod.yml"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏
log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
check_permissions() {
    if [ ! -w "$BACKUP_DIR" ]; then
        log_error "–ù–µ—Ç –ø—Ä–∞–≤ –∑–∞–ø–∏—Å–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é $BACKUP_DIR"
        exit 1
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ backup –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
create_backup_dir() {
    mkdir -p "$BACKUP_DIR"
    log_info "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è backup —Å–æ–∑–¥–∞–Ω–∞: $BACKUP_DIR"
}

# –°–æ–∑–¥–∞–Ω–∏–µ backup –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
create_database_backup() {
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ backup –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    cd /opt/memgame
    
    if ! $DOCKER_COMPOSE exec -T db pg_dump -U memgame memgame_production > "$BACKUP_DIR/$BACKUP_FILE"; then
        log_error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è backup –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
    if [ ! -s "$BACKUP_DIR/$BACKUP_FILE" ]; then
        log_error "Backup —Ñ–∞–π–ª –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ —Å–æ–∑–¥–∞–Ω"
        exit 1
    fi
    
    # –°–∂–∞—Ç–∏–µ backup
    gzip "$BACKUP_DIR/$BACKUP_FILE"
    BACKUP_FILE="${BACKUP_FILE}.gz"
    
    log_info "Backup —Å–æ–∑–¥–∞–Ω: $BACKUP_DIR/$BACKUP_FILE"
    log_info "–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: $(du -h "$BACKUP_DIR/$BACKUP_FILE" | cut -f1)"
}

# –ó–∞–≥—Ä—É–∑–∫–∞ –≤ S3 (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
upload_to_s3() {
    if [ -z "$AWS_S3_BUCKET" ]; then
        log_warn "AWS_S3_BUCKET –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤ S3"
        return 0
    fi
    
    log_info "–ó–∞–≥—Ä—É–∑–∫–∞ backup –≤ S3..."
    
    if command -v aws >/dev/null 2>&1; then
        aws s3 cp "$BACKUP_DIR/$BACKUP_FILE" "s3://$AWS_S3_BUCKET/backups/"
        log_info "Backup –∑–∞–≥—Ä—É–∂–µ–Ω –≤ S3: s3://$AWS_S3_BUCKET/backups/$BACKUP_FILE"
    else
        log_warn "AWS CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤ S3"
    fi
}

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö backup
cleanup_old_backups() {
    log_info "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö backup (—Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π)..."
    
    find "$BACKUP_DIR" -name "memgame_backup_*.sql.gz" -mtime +30 -delete
    
    log_info "–°—Ç–∞—Ä—ã–µ backup —É–¥–∞–ª–µ–Ω—ã"
}

# –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
send_notification() {
    local status=$1
    local message=$2
    
    if [ -n "$SLACK_WEBHOOK_URL" ]; then
        curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\":\"üîß MemGame Backup $status: $message\"}" \
            "$SLACK_WEBHOOK_URL" 2>/dev/null || true
    fi
    
    if [ -n "$TELEGRAM_BOT_TOKEN" ] && [ -n "$TELEGRAM_CHAT_ID" ]; then
        curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
            -d chat_id="$TELEGRAM_CHAT_ID" \
            -d text="üîß MemGame Backup $status: $message" 2>/dev/null || true
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    local mode=${1:-local}
    
    log_info "–ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ backup (—Ä–µ–∂–∏–º: $mode)"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    check_permissions
    create_backup_dir
    
    # –°–æ–∑–¥–∞–Ω–∏–µ backup
    if create_database_backup; then
        log_info "‚úÖ Backup –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ"
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ –≤ S3 –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è
        if [ "$mode" = "s3" ]; then
            upload_to_s3
        fi
        
        # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö backup
        cleanup_old_backups
        
        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        send_notification "Success" "Backup created: $BACKUP_FILE"
        
        log_info "üéâ Backup –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        log_error "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è backup"
        send_notification "Failed" "Backup creation failed"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "$1" in
    local|s3|"")
        main "$1"
        ;;
    --help|-h)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [local|s3]"
        echo ""
        echo "  local  - –°–æ–∑–¥–∞—Ç—å backup —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
        echo "  s3     - –°–æ–∑–¥–∞—Ç—å backup –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤ S3"
        echo ""
        echo "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
        echo "  AWS_S3_BUCKET      - Bucket –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ backup"
        echo "  SLACK_WEBHOOK_URL  - URL –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Slack"
        echo "  TELEGRAM_BOT_TOKEN - –¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞"
        echo "  TELEGRAM_CHAT_ID   - ID —á–∞—Ç–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
        exit 0
        ;;
    *)
        log_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç: $1"
        echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '$0 --help' –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
        exit 1
        ;;
esac 