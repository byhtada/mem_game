# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
DOCKER_COMPOSE = docker-compose
DOCKER_COMPOSE_PROD = docker-compose -f docker-compose.prod.yml

.PHONY: help build up down logs shell migrate seed test clean restart status

# –ü–æ–º–æ—â—å
help:
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo "  build          - –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑—ã"
	@echo "  up             - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ development —Ä–µ–∂–∏–º–µ"
	@echo "  down           - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
	@echo "  logs           - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
	@echo "  shell          - –û—Ç–∫—Ä—ã—Ç—å shell –≤ Rails –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
	@echo "  migrate        - –í—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏"
	@echo "  seed           - –ó–∞–ø–æ–ª–Ω–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"
	@echo "  test           - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã"
	@echo "  clean          - –û—á–∏—Å—Ç–∏—Ç—å Docker –¥–∞–Ω–Ω—ã–µ"
	@echo "  restart        - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
	@echo "  status         - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
	@echo "  frontend       - –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥"
	@echo ""
	@echo "Production –∫–æ–º–∞–Ω–¥—ã:"
	@echo "  prod-build     - –°–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞"
	@echo "  prod-up        - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ production —Ä–µ–∂–∏–º–µ"
	@echo "  prod-down      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å production"
	@echo "  prod-logs      - –õ–æ–≥–∏ production"
	@echo "  prod-shell     - Shell –≤ production –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
	@echo "  prod-backup    - –°–æ–∑–¥–∞—Ç—å backup –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
	@echo "  prod-restore   - –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ backup"
	@echo "  ssl-cert       - –ü–æ–ª—É—á–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã"
	@echo "  deploy         - –ü–æ–ª–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω"

# Development –∫–æ–º–∞–Ω–¥—ã
build:
	$(DOCKER_COMPOSE) build

up:
	$(DOCKER_COMPOSE) up -d
	@echo "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ http://localhost:3000"

down:
	$(DOCKER_COMPOSE) down

logs:
	$(DOCKER_COMPOSE) logs -f

shell:
	$(DOCKER_COMPOSE) exec web bash

update:
	$(DOCKER_COMPOSE) exec web bundle exec bundle install

rails-console:
	$(DOCKER_COMPOSE) exec web bundle exec rails console

migrate:
	$(DOCKER_COMPOSE) exec web bundle exec rails db:migrate

seed:
	$(DOCKER_COMPOSE) exec web bundle exec rails db:seed

test:
	$(DOCKER_COMPOSE) exec web bundle exec rails test

restart:
	$(DOCKER_COMPOSE) restart

status:
	$(DOCKER_COMPOSE) ps

# –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
frontend:
	$(DOCKER_COMPOSE) exec web bash -c "cd memgame_web && npm run build && cp -r dist/* ../public/ && cp -r assets ../public/ && cp -r libs ../public/"

# Production –∫–æ–º–∞–Ω–¥—ã
prod-build:
	$(DOCKER_COMPOSE_PROD) build --no-cache

prod-up:
	$(DOCKER_COMPOSE_PROD) up -d
	@echo "Production –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ"
	@echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: make prod-status"

prod-down:
	$(DOCKER_COMPOSE_PROD) down

prod-logs:
	$(DOCKER_COMPOSE_PROD) logs -f

prod-shell:
	$(DOCKER_COMPOSE_PROD) exec web bash

prod-status:
	$(DOCKER_COMPOSE_PROD) ps
	@echo ""
	@echo "Health checks:"
	@docker ps --format "table {{.Names}}\t{{.Status}}"

# SSL –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
ssl-cert:
	@echo "–ü–æ–ª—É—á–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
	@if [ -z "$(DOMAIN)" ]; then echo "–û—à–∏–±–∫–∞: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è DOMAIN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"; exit 1; fi
	@if [ -z "$(LETSENCRYPT_EMAIL)" ]; then echo "–û—à–∏–±–∫–∞: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è LETSENCRYPT_EMAIL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"; exit 1; fi
	mkdir -p certbot/www certbot/conf ssl
	$(DOCKER_COMPOSE_PROD) --profile certbot run --rm certbot \
		certonly --webroot \
		--webroot-path=/var/www/certbot \
		--email $(LETSENCRYPT_EMAIL) \
		--agree-tos \
		--no-eff-email \
		-d $(DOMAIN)
	sudo cp certbot/conf/live/$(DOMAIN)/fullchain.pem ssl/cert.pem
	sudo cp certbot/conf/live/$(DOMAIN)/privkey.pem ssl/key.pem
	@echo "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

ssl-renew:
	$(DOCKER_COMPOSE_PROD) --profile certbot run --rm certbot renew --quiet
	sudo cp certbot/conf/live/$(DOMAIN)/fullchain.pem ssl/cert.pem
	sudo cp certbot/conf/live/$(DOMAIN)/privkey.pem ssl/key.pem
	$(DOCKER_COMPOSE_PROD) restart nginx
	@echo "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã"

# Backup –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
prod-backup:
	@echo "–°–æ–∑–¥–∞–Ω–∏–µ backup –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	mkdir -p backups
	$(DOCKER_COMPOSE_PROD) exec -T db pg_dump -U memgame memgame_production > backups/backup_$(shell date +%Y%m%d_%H%M%S).sql
	@echo "Backup —Å–æ–∑–¥–∞–Ω –≤ –ø–∞–ø–∫–µ backups/"

prod-restore:
	@if [ -z "$(BACKUP_FILE)" ]; then echo "–û—à–∏–±–∫–∞: —É–∫–∞–∂–∏—Ç–µ —Ñ–∞–π–ª backup: make prod-restore BACKUP_FILE=backups/backup_file.sql"; exit 1; fi
	@echo "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ $(BACKUP_FILE)..."
	$(DOCKER_COMPOSE_PROD) stop web sidekiq
	cat $(BACKUP_FILE) | $(DOCKER_COMPOSE_PROD) exec -T db psql -U memgame -d memgame_production
	$(DOCKER_COMPOSE_PROD) start web sidekiq
	@echo "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"

# –ü–æ–ª–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
deploy: prod-build
	@echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω..."
	@if [ ! -f .env ]; then echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ env.production.example –≤ .env"; exit 1; fi
	mkdir -p ssl backups certbot/www certbot/conf logs
	@echo "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"
	$(DOCKER_COMPOSE_PROD) up -d
	@echo "‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
	@echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
	sleep 30
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞..."
	make prod-status
	@echo ""
	@echo "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
	@echo "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: https://$(DOMAIN)"

# –û—á–∏—Å—Ç–∫–∞
clean:
	$(DOCKER_COMPOSE) down -v --rmi all --remove-orphans
	docker system prune -f

clean-prod:
	$(DOCKER_COMPOSE_PROD) down -v --rmi all --remove-orphans
	docker system prune -f

clean-volumes:
	$(DOCKER_COMPOSE) down -v
	$(DOCKER_COMPOSE_PROD) down -v

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
db-reset:
	$(DOCKER_COMPOSE) exec web bundle exec rails db:drop db:create db:migrate db:seed

prod-migrate:
	$(DOCKER_COMPOSE_PROD) exec web bundle exec rails db:migrate

prod-console:
	$(DOCKER_COMPOSE_PROD) exec web bundle exec rails console

# Sidekiq
sidekiq-restart:
	$(DOCKER_COMPOSE) restart sidekiq

sidekiq-logs:
	$(DOCKER_COMPOSE) logs -f sidekiq

prod-sidekiq-restart:
	$(DOCKER_COMPOSE_PROD) restart sidekiq

prod-sidekiq-logs:
	$(DOCKER_COMPOSE_PROD) logs -f sidekiq

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
monitor:
	@echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã:"
	@echo ""
	@echo "üê≥ Docker —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
	@docker stats --no-stream
	@echo ""
	@echo "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞:"
	@df -h
	@echo ""
	@echo "üîß –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
	@make prod-status

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫
setup: build
	$(DOCKER_COMPOSE) up -d db redis
	@echo "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	sleep 10
	$(DOCKER_COMPOSE) run --rm web bundle exec rails db:create db:migrate db:seed
	@echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'make up' –¥–ª—è –∑–∞–ø—É—Å–∫–∞"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
security-check:
	@echo "üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:"
	@echo ""
	@echo "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã:"
	@if [ -f ssl/cert.pem ]; then openssl x509 -in ssl/cert.pem -noout -dates; else echo "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"; fi
	@echo ""
	@echo "–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º:"
	@ls -la .env ssl/ 2>/dev/null || echo "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
	@echo ""
	@echo "–û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã:"
	@netstat -tulpn | grep -E ':(80|443|3000|5432|6379)' || echo "–ü–æ—Ä—Ç—ã –Ω–µ –æ—Ç–∫—Ä—ã—Ç—ã" 