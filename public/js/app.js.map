{"version":3,"file":"./js/app.js","mappings":";;;;AAAA;AACA;AACA;;AAEA,mBAAmB;AACnB;;AAEA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,OAAO,iCAAiC,OAAO;AAC9E,GAAG;;AAEH;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA,CAAC;AACD;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,qBAAqB;AAC9D;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;;;AAGA;AACA,yCAAyC;AACzC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,uEAAuE,SAAS;AAChF;AACA,2DAA2D,yBAAyB;AACpF,6DAA6D,+BAA+B;;AAE5F;;AAEA;AACA,8DAA8D,yBAAyB;AACvF;AACA,uEAAuE,+BAA+B;AACtG,kEAAkE,gCAAgC;AAClG;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,4CAA4C;AAC5C;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,6CAA6C,WAAW;AACxD,iBAAiB,YAAY;AAC7B;;AAEA;AACA;;AAEA,8BAA8B,YAAY;AAC1C;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA,4CAA4C;AAC5C,4DAA4D,2BAA2B;AACvF,qEAAqE,qCAAqC;;;AAG1G;AACA,8BAA8B;AAC9B,oFAAoF,eAAe;;;AAGnG;AACA,4CAA4C;AAC5C;AACA,iGAAiG,aAAa;;;AAG9G;AACA;AACA,6DAA6D,WAAW,EAAE,WAAW;;;AAGrF;AACA,iCAAiC;AACjC,kEAAkE,kBAAkB;AACpF;;;AAGA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA,yEAAyE,gBAAgB;AACzF;AACA;AACA,CAAC;AACD;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,oDAAoD;AAC5F;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sFAAsF,mBAAmB;AACzG;AACA;;AAEA;AACA;;AAEA;AACA,OAAO;AACP;AACA,IAAI;AACJ;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ,yCAAyC,qBAAqB;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA,CAAC;;;;;AAKD;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA,oCAAoC,oDAAoD;AACxF;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kDAAkD,sBAAsB;AACxE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;;AAEX;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA,gDAAgD,sBAAsB;AACtE,2CAA2C,YAAY;AACvD,oDAAoD,cAAc;AAClE,yCAAyC,gCAAgC;AACzE;AACA,GAAG;;AAEH;AACA,mBAAmB,2CAA2C;AAC9D;AACA,kDAAkD;AAClD;AACA,gDAAgD;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wEAAwE,sBAAsB;AAC9F;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA,0EAA0E,sBAAsB;;AAEhG;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,sBAAsB;AACnE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO;AACP;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,SAAS,iBAAiB,WAAW,+BAA+B,SAAS,SAAS,UAAU;AAChJ,GAAG;;AAEH;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,yCAAyC,0CAA0C;AACnF;;AAEA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;AACA,CAAC;;;AAGD;AACA,GAAG,gDAAgD;AACnD,GAAG,iDAAiD;AACpD,GAAG,yDAAyD;AAC5D;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,2DAA2D,EAAE;AAC7D;AACA;AACA;AACA,GAAG;;AAEH,uCAAuC,+CAA+C;AACtF,sBAAsB;AACtB;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA,uCAAuC,4CAA4C;AACnF;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C,sBAAsB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA,6DAA6D,cAAc;AAC3E,KAAK;;AAEL;AACA;AACA;AACA,oDAAoD,cAAc,iCAAiC,WAAW;AAC9G;AACA,GAAG;;AAEH;;;;AAIA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,0CAA0C,sBAAsB;AAChE;AACA;;AAEA;AACA,uDAAuD,GAAG;AAC1D,OAAO;;AAEP;AACA;;AAEA;;AAEA;AACA,sEAAsE,mBAAmB;;AAEzF;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2CAA2C,sBAAsB;AACjE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA;AACA;;;AAGA;AACA,+CAA+C,sBAAsB;AACrE;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yDAAyD,GAAG;AAC5D,SAAS;;AAET;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;;;AAIA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2DAA2D,EAAE;AAC7D;AACA,6EAA6E,YAAY;AACzF,gEAAgE,SAAS;;AAEzE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qCAAqC,EAAE,qBAAqB,SAAS;AACrE,GAAG;;AAEH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,2CAA2C,0BAA0B;AACrE;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kDAAkD,SAAS;AAC3D,mDAAmD,SAAS;AAC5D;;AAEA;AACA;;AAEA;AACA,yBAAyB,OAAO,GAAG,SAAS;AAC5C,GAAG;AACH;;;;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,CAAC;;;;;;AAMD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;;;AAID;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;AAID;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;;AAGA;AACA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA,CAAC;;;AAGD;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,QAAQ,EAAE,IAAI;AAChC;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,+DAA+D;AAC/D;AACA;AACA;AACA,YAAY,6BAA6B,qCAAqC;AAC9E;AACA;AACA;;AAEA;AACA,wCAAwC,uCAAuC;AAC/E","sources":["webpack:// /./js/app.js"],"sourcesContent":["// 🚀 Версия с автоматическим watcher\nTelegram.WebApp.ready();\nlet init_data = Telegram.WebApp.initData\n\nlet api_url = \"/\"; // Используем относительные пути для API когда фронтенд интегрирован в Rails\n//init_data = \"user=%7B%22id%22%3A317600571%2C%22first_name%22%3A%22%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B0%D0%BD%D0%B4%D1%80%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22aleksandrrr_n%22%2C%22language_code%22%3A%22ru%22%2C%22is_premium%22%3Atrue%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2FlcHASOH7fiK4aSZX9v9XBudEdIE7m91wkR957a1XpZs.svg%22%7D&chat_instance=-7090027097801552795&chat_type=channel&auth_date=1736270286&signature=VTQpsQKQrOuHEX-Z6KVDT81nmHxDBeYiJXoo47PLTdZfk0z4hdneRFl3ITwjZGAfm8CSWfgiKtLARchvv5fpCg&hash=29fba79d9b9a8ec4393469d47b0a5c08d9f93958ca226c81dcd521d9892ee55b\"\n\nconsole.log(\"🎮 window.location.href32 \", window.location.href)\n\nif (window.location.href.includes(\"127.0.0.1:5500\")) {\n  init_data = \"user=%7B%22id%22%3A317600571%2C%22first_name%22%3A%22%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B0%D0%BD%D0%B4%D1%80%22%2C%22last_name%22%3A%22%22%2C%22username%22%3A%22aleksandrrr_n%22%2C%22language_code%22%3A%22ru%22%2C%22is_premium%22%3Atrue%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2FlcHASOH7fiK4aSZX9v9XBudEdIE7m91wkR957a1XpZs.svg%22%7D&chat_instance=-7090027097801552795&chat_type=channel&auth_date=1736270286&signature=VTQpsQKQrOuHEX-Z6KVDT81nmHxDBeYiJXoo47PLTdZfk0z4hdneRFl3ITwjZGAfm8CSWfgiKtLARchvv5fpCg&hash=29fba79d9b9a8ec4393469d47b0a5c08d9f93958ca226c81dcd521d9892ee55b\"\n} else if (window.location.href.includes(\"teremok.space\")) {\n  init_data = Telegram.WebApp.initData\n}\n \n\n\n// Init TWA\n \n\nlet timeout_game_wait  = null\nlet timeout_round_wait = null\nlet timeout_vote_wait = null\nlet timeout_restart_wait  = null\n\nlet data_game = null\nlet data_round = null\nlet user_id = null\nlet div_my_mems = document.getElementById('div_my_mems')\nlet user_data = null\n\n\nconst avatars = [\n  1,2,10,11,13,15,17,20,29,32,37,42,43,50,51,\n  54,57,62,70,75,\n  77,85,88,105,114\n ]\nfunction setBaseAvatars(){\n  const container = document.getElementById(\"container_avatars\")\n  let html = \"\"\n  avatars.forEach(avatar => {\n    html += `<img data-name=\"${avatar}\" src=\"/assets/mem_img/svg/mem_${avatar}.svg\"/>`\n  })\n\n  container.innerHTML = html\n\n  Array.from(container.querySelectorAll(\"img\")).forEach(element => {\n    element.addEventListener(\"click\", setNewAvatar)\n  })\n\n  function setNewAvatar(){\n    Array.from(container.querySelectorAll(\"img\")).forEach(element => {\n      element.classList.remove(\"selected\")\n    })\n    this.classList.add(\"selected\")\n  }\n}\nsetBaseAvatars()\n\ndocument.getElementById('div_user_info').addEventListener('click', function(){\n  const user_data = document.getElementById('container_user_data')\n  if (user_data.style.display === \"block\") {\n    user_data.style.display = \"none\"\n  } else {\n    user_data.style.display = \"block\"\n  }\n\n})\ndocument.getElementById('btn_save_user_data').addEventListener('click', function(){\n  let ava = \"\"\n  let name = document.getElementById(\"input_user_nick\").value\n\n\n  const container = document.getElementById(\"container_avatars\")\n  Array.from(container.querySelectorAll(\"img\")).forEach(element => {\n    if (element.classList.contains(\"selected\") ) {\n      ava = element.getAttribute(\"data-name\")\n    }\n  })\n\n  if (name === \"\") {\n    showAlert('good', \"Введите ник\")\n    return\n  }\n  if (ava === \"\") {\n    alert(\"Выберите аватар\")\n    return\n  }\n\n  sendRequest('post', 'save_user_data', {name: name, ava: ava})\n    .then(data => {\n      setUserData(data.user)\n      document.getElementById('container_user_data').style.display = \"none\"\n    })\n    .catch(err => console.log(err))\n})\nconst btn_click_energy = document.getElementById('btn_click_energy')\n\n\nfunction getUserData(){\n  sendRequest('post', 'get_user_data', {})\n    .then(data => {\n      document.getElementById(\"page_load\").style.display = \"none\"\n      document.getElementById(\"page_main\").style.display = \"block\"\n\n      user_data = data.user\n      setUserData(data.user)\n      setClickerImg()\n\n      document.querySelector('[data-page=\"main\"] .big_img').src = \"assets/mem_img/gif/mem_20.gif\"\n      document.querySelector('[data-page=\"friends\"] .big_img').src = \"assets/mem_img/gif/mem_98.gif\"\n      document.querySelector('[data-page=\"tournament\"] .big_img').src = \"assets/mem_img/gif/mem_75.gif\"\n      document.querySelector('[data-page=\"clicker\"] .big_img').src = \"assets/mem_img/gif/mem_41.gif\"\n\n      document.querySelector('#container_error .container_big_img img').src = \"assets/mem_img/gif/mem_57.gif\"\n      document.querySelector('#container_premium .container_big_img img').src = \"assets/mem_img/gif/mem_14.gif\"\n      document.querySelector('#container_finish_game .big_img').src = \"assets/mem_img/gif/mem_1.gif\"\n\n      getUserFriends()\n    })\n    .catch(err => console.log(err))\n}\ngetUserData()\n\nfunction setUserData(user){\n  user_data = user\n  document.getElementById(\"user_name\").innerText = user.name\n  document.getElementById(\"user_ava\").src = `/assets/mem_img/svg/mem_${user.ava}.svg`\n  document.getElementById(\"input_user_nick\").value = user.name\n  document.querySelectorAll('.value_coins').forEach(e => { e.innerText = user.coins})\n  document.getElementById(\"current_dollars\").innerText = `~${(user.coins * 4.06).toFixed(2)}$`\n\n  setEnergy(user.energy)\n\n  if (user.premium){\n    document.querySelectorAll('.open_premium').forEach(e => { e.style.display = 'none'})\n  \n    document.querySelectorAll('.text_cost_participant').forEach(e => { e.innerText = 'За участие +30'})\n    document.querySelectorAll('.text_cost_winner').forEach(e => { e.innerText = 'За участие +150'})\n  }\n\n  if (user.registered_in_tournament) {\n    document.getElementById('btn_tournament_register').style.display = 'none'\n    document.getElementById('div_tournament_registered').style.display = 'block'\n  }\n}\n\nfunction getUserFriends(){\n\n  sendRequest('post', 'get_user_friends', {})\n    .then(data => {\n\n      if (data.friends.length > 0){\n        setUserFriends(data.friends)\n      }\n    })\n    .catch(err => console.log(err))\n}\n\nfunction setUserFriends(friends) {\n  let html = ''\n\n  friends.forEach(friend => {\n    html += `\n      <div class=\"friend_item\">\n        <div class=\"base_info\">\n          <img src=\"assets/mem_img/svg/mem_${friend.ava}.svg\" />\n          <div>${friend.name}</div>\n        </div>\n\n        <div class=\"second_info\">\n          <div class=\"container text_with_icon\">+500 <img src=\"img/coin.svg\"/></div>\n\n          <div class=\"date\">${friend.date}</div>\n        </div>\n      </div>\n    `\n  })\n\n  document.getElementById('div_friends_list').innerHTML = html\n}\n\n\nconst GAME_COST = 75\nfunction setEnergy(energy) {\n  let energy_text = parseFloat(energy).toFixed(1)\n  if (energy_text > user_data.energy_max) { energy_text = user_data.energy_max }\n  document.querySelectorAll('.value_energy').forEach(e => { e.innerText = energy_text })\n  document.querySelectorAll('.top_bar .value_energy').forEach(e => { e.innerText = parseInt(energy_text) })\n\n\n  let energy_percent = 100 * energy/user_data.energy_max\n  if (energy_percent > 100) { energy_percent = 100 }\n  document.querySelectorAll('.top_bar .energy_bar').forEach(e => e.style.width = `${energy_percent}%`)\n\n\n  let energy_int = energy_text\n  if (energy_int == user_data.energy_max) { energy_int -= 0.001 }\n  let game_percent = 100 * ( energy_int % GAME_COST) / GAME_COST\n  document.querySelectorAll('[data-page=\"clicker\"] .energy_bar').forEach(e => e.style.width = `${game_percent}%`)\n\n\n  let games_num = parseInt(parseInt(energy_text) / GAME_COST)\n  let games_text = 'игр'\n  document.getElementById('text_games_count').innerText = `${games_num} ${games_text}`\n\n\n  //let game_percent_full = parseInt(100 * ( parseInt(energy_text) % GAME_COST) / GAME_COST)\n  //if (game_percent_full == 0) {game_percent_full = 100} \n  //document.getElementById('energy_game_percent').innerText = `${game_percent_full}%`\n}\n\n\ndocument.getElementById('btn_invite_friend').addEventListener('click', function(){\n  document.getElementById('btn_invite_friend').style.display = 'none'\n  document.getElementById('div_btns_invite').style.display = 'block'\n})\n\ndocument.getElementById('btn_invite_message').addEventListener('click', function(){\n  sendRequest('post', 'create_tg_message')\n    .then(data => {\n      Telegram.WebApp.shareMessage(data.message.result.id)\n    })\n    .catch(err => console.log(err))\n})\n\ndocument.getElementById('btn_invite_link').addEventListener('click', function(){\n  navigator.clipboard.writeText(`https://t.me/mem_culture_bot?start=in_${user_data.tg_id}`);\n  \n  document.getElementById('btn_invite_link').innerText = 'Скопирована!'\n})\n  \n\n\nTelegram.WebApp.expand();\n\nconst UPDATE_TIME = 1000;\neruda.init()\nlet logger = eruda.get('console');\n\nfunction showUserInfo(){\n  logger.log('eruda');\n  logger.log(\"initData \", Telegram.WebApp.initData)\n  logger.log(\"initDataUnsafe \", Telegram.WebApp.initDataUnsafe)\n  logger.log(\"initData user \", Telegram.WebApp.initDataUnsafe.user)\n\n  logger.log(\"href \", window.location.href)\n  logger.log(\"WebAppInitData1 \", Telegram.WebAppInitData)\n  logger.log(\"WebAppInitData2 \", Telegram.webAppInitData)\n  logger.log(\"WebAppInitData3 \", Telegram.webAppInitDataUnsafe)\n  logger.log(\"WebView \", Telegram.WebView)\n  logger.log(\"Telegram \", Telegram)\n\n  \n}\nshowUserInfo()\n\n\nconst div_video = document.getElementById(\"div_video\")\nconst my_mem_video = document.getElementById(\"my_mem_video\")\nconst my_mem_mp4 = document.getElementById(\"my_mem_mp4\")\n\nconst container_game_participants = document.getElementById(\"container_game_participants\")\ndocument.getElementById('btn_create').addEventListener('click', function(){\n  document.getElementById('btn_enter').style.display = 'none'\n  document.getElementById(`container_finish_game`).style.display = \"none\"\n\n  game_question.innerText = \"Ожидаем игроков...\"\n  progress_comment.innerText = \"\"\n  container_progress_line.style.display = 'none'\n  progress_line.style.width = \"0%\"\n\n  if (container_game_participants.style.display == \"block\") {\n    sendRequest('post', 'create_game', {participants: parseInt(game_participants.innerText)})\n      .then(data => {\n        if (data.error) {\n          showAlert('bad', data.error)\n          return\n        }\n\n        document.getElementById('page_main').style.display = \"none\"\n        document.getElementById('page_game').style.display = \"block\"\n        document.getElementById('game_question').innerText = `Отправьте друзьям код ${data.game.uniq_id} для присоединения к игре`\n        div_my_mems.innerHTML = \"\"\n        div_my_mems.style.display = \"none\"\n\n        data_game = data.game\n        user_id = data.user_id\n\n        timeoutGameWait()\n      })\n      .catch(err => console.log(err))\n  } else {\n    document.getElementById(\"container_game_participants\").style.display = \"block\"\n  }\n})\n\nconst game_participants = document.getElementById('game_participants')\ndocument.getElementById('btn_add_participant').addEventListener('click', function(){\n  let new_participants = parseInt(game_participants.innerText) + 1\n  if (new_participants <= 5){\n    game_participants.innerText = new_participants\n  }\n})\ndocument.getElementById('btn_remove_participant').addEventListener('click', function(){\n  let new_participants = parseInt(game_participants.innerText) - 1\n  if (new_participants >= 3){\n    game_participants.innerText = new_participants\n  }\n})\n\n\nfunction showAlert(type, text){\n  document.getElementById('container_error').style.display = 'block'\n  document.getElementById('error_text').innerText = text\n\n  if (type == 'good') {\n    document.querySelector('#container_error img').src = 'assets/mem_img/gif/mem_11.gif'\n  } else {\n    document.querySelector('#container_error img').src = 'assets/mem_img/gif/mem_57.gif'\n  }\n}\n\nconst input_game_code = document.getElementById(\"input_game_code\")\n\ndocument.getElementById('btn_enter').addEventListener('click', function(){\n  document.getElementById('btn_create').style.display = 'none'\n  \n  const game_code = parseInt(input_game_code.value)\n  console.log(\"game_code \", game_code)\n\n  if (game_code === 0 || game_code === null || game_code === undefined || isNaN(game_code)) {\n    document.getElementById(\"container_game_code\").style.display = \"block\"\n  } else {\n    sendRequest('post', 'join_to_game', {game_code: game_code})\n      .then(data => {\n        if (data.error) {\n          showAlert('bad', data.error)\n          return\n        }\n\n        document.getElementById('page_main').style.display = \"none\"\n        document.getElementById('page_game').style.display = \"block\"\n        document.getElementById(`btn_restart_game`).style.display = \"none\"\n\n        div_my_mems.style.display = \"none\"\n\n        data_game = data.game\n        user_id = data.user_id\n\n        timeoutGameWait()\n      })\n      .catch(err => console.log(err))\n  }\n\n})\n\n\n\n\ndocument.getElementById('btn_new_game').addEventListener('click', function(){\n  findGame()\n})\n\ndocument.getElementById('btn_find_game').addEventListener('click', function(){\n  //showAlert('good', \"Бета-тест. Доступна только игра между друзьями\")\n  //return\n\n  document.getElementById(`container_finish_game`).style.display = \"none\"\n\n  game_question.innerText = \"Ожидаем игроков...\"\n  progress_comment.innerText = \"\"\n  progress_line.style.width = \"0%\"\n  container_progress_line.style.display = 'none'\n\n  findGame()\n})\n\nfunction findGame(){\n  sendRequest('post', 'find_game', {participants: parseInt(game_participants.innerText)})\n    .then(data => {\n      if (data.error){\n        showAlert('bad', data.error)\n        return\n      }\n\n      startGame(data.game, data.user_id)\n    })\n    .catch(err => console.log(err))\n}\n\nfunction startGame(game, current_user_id){\n  document.getElementById(`container_finish_game`).style.display = \"none\"\n\n  game_question.innerText = \"Ожидаем игроков...\"\n  progress_comment.innerText = \"\"\n  progress_line.style.width = \"0%\"\n  container_progress_line.style.display = 'none'\n\n  document.getElementById('game_winner').style.display = \"none\"\n  document.getElementById('page_main').style.display = \"none\"\n  document.getElementById('page_game').style.display = \"block\"\n  div_my_mems.style.display = \"none\"\n\n  data_game = game\n  user_id = current_user_id\n\n  timeoutGameWait()\n}\n\nfunction timeoutGameWait(){\n  if (timeout_game_wait != null){\n    clearInterval(timeout_game_wait)\n  }\n\n  setGameUsers([])\n\n  timeout_game_wait = setInterval(() => {\n    sendRequest('post', 'get_update_game_ready', {game_id: data_game.id})\n      .then(data => {\n        console.log(\"🎮 get_update_game_ready \", data)\n        setGameUsers(data.users)\n        setUsersReady(data.game, data.users)\n\n        if (data.ready_to_start) {\n          setTimeout(() => {\n            div_my_mems.style.display = \"flex\"\n          }, 550)\n\n          clearInterval(timeout_game_wait)\n\n          //document.getElementById(\"div_round_result\").display = \"block\"\n          //Array.from(document.getElementsByClassName(\"div_mem\")).forEach(element => {\n          //  element.style.display = \"flex\"\n          //})\n          timeoutRoundWait()\n        }\n      })\n      .catch(err => console.log(err))\n  }, UPDATE_TIME)\n}\n\nfunction setGameUsers(users){\n  let html = \"\"\n\n  users.forEach(user => {\n    let game_points  = user.game_points\n\n    html += `<div class=\"div_player\" data-id=\"${user.game_user_number}\">\n                <div class=\"user_points\">${game_points}<span class=\"new_points\"></span></div>\n                <img src=\"/assets/mem_img/svg/mem_${user.user_ava}.svg\"/>\n                <div class=\"user_name\">${cutString( user.user_name, 10) }</div>\n              </div>`\n  })\n\n  if (users.length < data_game.participants){\n    for(let i = 0; i < data_game.participants - users.length; i++){\n      html += `<div class=\"div_player\">\n                  <div class=\"user_points\">&#8203;</div>\n                  <img src=\"/assets/square.svg\"/>\n                  <div class=\"user_name\">&#8203;</div>\n                </div>`\n    }\n  }\n\n  document.getElementById(\"div_players\").innerHTML = html\n}\n\nfunction leaveGame(users){\n  user_in_game = false\n  users.forEach(user => {\n    if (user.user_id == user_id){\n      user_in_game = true\n    }\n  })\n  if (!user_in_game){\n    window.location.reload()\n  }\n}\n\nfunction setUsersReady(game, users){\n  const div_players = document.getElementById(\"div_players\")\n\n  users.forEach(user => {\n    const container = div_players.querySelector(`.div_player[data-id=\"${user.game_user_number}\"]`)\n    container.classList.remove(\"winner\")\n  })\n}\n\nfunction setUsersRestart(game, users) {\n  const div_players = document.getElementById(\"div_players\")\n\n  users.forEach(user => {\n    if (user.ready_to_restart){\n      const container = div_players.querySelector(`.div_player[data-id=\"${user.game_user_number}\"]`)\n\n      container.querySelector('.user_points').innerText = 'Готов'\n    }\n  })\n}\n\n\nconst game_question = document.getElementById(\"game_question\")\nconst progress_line = document.getElementById(\"progress_line\")\nconst container_progress_line = document.getElementById(\"container_progress_line\")\n\nfunction cutString(str, length) {\n  let result = str\n  if (result.length > length) {\n    result = str.slice(0, length) + \"...\"\n  }\n\n  return result\n}\n\n\nconst progress_comment = document.getElementById(\"progress_comment\")\n\nfunction timeoutRoundWait(){\n  if (timeout_round_wait != null){\n    clearInterval(timeout_round_wait)\n  }\n  progress_comment.innerText = \"Ожидаем мемы...\"\n\n  timeout_round_wait = setInterval(() => {\n    sendRequest('post', 'get_round_update', {game_id: data_game.id})\n      .then(data => {\n        console.log(\"get_round_update \", data)\n\n        game_question.innerText = data.question\n        //game_question.innerText = \"\"\n        if (data.round_progress_wait > 95) {\n          //typeText(game_question, data.question)\n        }\n\n        progress_line.style.width = data.round_progress_wait + \"%\"\n        container_progress_line.style.display = 'block'\n        leaveGame(data.users)\n        setGameUsers(data.users)\n        setMyMems(data.my_mems)\n\n        if (data.ready_to_open) {\n          data_round = data.round\n          clearInterval(timeout_round_wait)\n          round_result = data.mems\n          showRoundMems()\n        }\n\n      })\n      .catch(err => console.log(err))\n  }, UPDATE_TIME)\n}\n\nfunction typeText(element, text) {\n  let speed = 50\n  let i = 0\n  element.innerHTML = \"\"\n\n  function typeWritter() {\n    if (i < text.length) {\n      element.innerHTML += text.charAt(i);\n      i++;\n      setTimeout(typeWritter, speed);\n    }\n  }\n\n  typeWritter()\n}\n\nfunction setMyMems(my_mems){\n  let html = ''\n  my_mems.forEach(mem => {\n    const in_active = mem.active ? \"\" : `<div class=\"mem_inactive\"></div>`\n    html += `<div class=\"mem_card\" data-name=\"${mem.name}\" data-active=\"${mem.active}\"><img src=\"assets/mem_video/${mem.name}.png\"/>${in_active}</div>`\n  })\n\n  document.getElementById('div_my_mems').innerHTML = html\n\n  Array.from(document.querySelectorAll(\"#div_my_mems .mem_card\")).forEach(function(element) {\n    element.addEventListener(\"click\", onMemClick )\n  })\n}\n\nfunction onMemClick(){\n  if (this.getAttribute(\"data-active\") === \"true\") {\n    const mem_name = this.getAttribute(\"data-name\")\n    div_video.style.display = \"flex\"\n    my_mem_mp4.src = `assets/mem_video/${mem_name}.mp4`\n    btn_send.innerText = \"Отправить\"\n    btn_send.setAttribute(\"data-mem-name\", mem_name)\n    my_mem_video.load();\n    my_mem_video.play();\n  }\n}\n\nconst btn_send = document.getElementById('btn_send')\n\nbtn_send.addEventListener('click', function(){\n  const mem_name = this.getAttribute(\"data-mem-name\")\n  div_my_mems.style.display = \"none\"\n\n  //div_video.style.display = \"none\"\n  //my_mem_video.pause();\n\n  sendRequest('post', 'send_round_mem', {game_id: data_game.id, mem_name: mem_name})\n    .then(data => {\n\n      Array.from(document.getElementsByClassName(\"div_mem\")).forEach(element => {\n        element.style.display = \"none\"\n      })\n\n      btn_send.innerText = \"Ждём...\"\n    })\n    .catch(err => console.log(err))\n})\n\n\nlet round_result = [\n  {name: \"Name1\", avatar: \"avatar\", mem: \"zhestko\"},\n  {name: \"Name2\", avatar: \"avatar\", mem: \"aeroflot\"},\n  {name: \"Name3\", avatar: \"avatar\", mem: \"lavochka_zakrita\"},\n]\n\n\nconst div_video_0 = document.getElementById(\"div_video_0\")\nconst mem_0_video = document.getElementById(\"mem_0_video\")\n\nconst div_video_1 = document.getElementById(\"div_video_1\")\nconst mem_1_video = document.getElementById(\"mem_1_video\")\n\nconst div_video_2 = document.getElementById(\"div_video_2\")\nconst mem_2_video = document.getElementById(\"mem_2_video\")\n\nconst div_video_3 = document.getElementById(\"div_video_3\")\nconst mem_3_video = document.getElementById(\"mem_3_video\")\n\nconst div_video_4 = document.getElementById(\"div_video_4\")\nconst mem_4_video = document.getElementById(\"mem_4_video\")\n\nmem_0_video.onended = function(e) {\n  div_video_1.style.display = \"flex\"\n  mem_1_video.load();\n  mem_1_video.play();\n};\nmem_1_video.onended = function(e) {\n  if (round_result.length > 2) {\n    div_video_2.style.display = \"flex\"\n    mem_2_video.load();\n    mem_2_video.play();\n\n  } else {\n    showVotes()\n  }\n};\nmem_2_video.onended = function(e) {\n  if (round_result.length > 3) {\n    div_video_3.style.display = \"flex\"\n    mem_3_video.load();\n    mem_3_video.play();\n  } else {\n    showVotes()\n  }\n\n};\nmem_3_video.onended = function(e) {\n  if (round_result.length > 4) {\n    div_video_4.style.display = \"flex\"\n    mem_4_video.load();\n    mem_4_video.play();\n  } else {\n    showVotes()\n  }\n\n};\nmem_4_video.onended = function(e) {\n  showVotes()\n\n};\n\nfunction showVotes(){\n  round_result.forEach((item, i) => {\n    const container = document.getElementById(`div_video_${i}`)\n    //container.querySelector('.votes_count').style.display = \"block\"\n    container.querySelector('.mem_vote').style.display = \"block\"\n    container.querySelector('.mem_vote').addEventListener(\"click\", voteForMem)\n  })\n\n  sendRequest('post', 'start_voting', {game_id: data_game.id, round_id: data_round.id})\n    .then(data => {  })\n    .catch(err => console.log(err))\n\n  timeoutVotesWait()\n}\n\nfunction voteForMem(){\n  Array.from(document.querySelectorAll(\".mem_vote\")).forEach(element => {\n    element.style.visibility = \"hidden\"\n  })\n\n  this.parentElement.parentElement.querySelector('.container_video_mem').classList.add('voted')\n\n  const user_num = this.getAttribute(\"data-user-num\")\n  console.log(\"voteForMem \", user_num)\n\n  sendRequest('post', 'vote_for_mem', {user_num: user_num, round_id: data_round.id})\n    .then(data => {\n    })\n    .catch(err => console.log(err))\n}\n\nfunction timeoutVotesWait(){\n  console.log(\"Wait for vote\")\n  if (timeout_vote_wait != null){\n    clearInterval(timeout_vote_wait)\n  }\n  progress_comment.innerText = \"Голосуем...\"\n\n  timeout_vote_wait = setInterval(() => {\n    sendRequest('post', 'get_vote_update', {game_id: data_game.id})\n      .then(data => {\n        console.log(\"get_vote_update \", data)\n       // setGameUsers(data.users)\n        setVotes(data.mems)\n        progress_line.style.width = data.vote_progress_wait + \"%\"\n        container_progress_line.style.display = 'block'\n        leaveGame(data.users)\n\n        if (data.vote_finish) {\n          clearInterval(timeout_vote_wait)\n          setGameUsers(data.users)\n\n          if (data.finish_game){\n            finishGame()\n          } else {\n            finishRound()\n          }\n        }\n      })\n      .catch(err => console.log(err))\n  }, UPDATE_TIME)\n}\n\nfunction setVotes(data){\n  const container = document.getElementById(`div_round_result`)\n\n  //data.forEach(item => {\n  //  container.querySelector(`.votes_count[data-user-num=\"${item.user_num}\"]`).innerHTML = item.votes\n  //})\n\n  const players = document.getElementById(`div_players`)\n  data.forEach(item => {\n    if (item.votes > 0){\n      players.querySelector(`.div_player[data-id=\"${item.user_num}\"] .new_points`).innerText = `+${item.votes}`\n    }\n  })\n\n}\n\n\n\nfunction finishRound(){\n  div_my_mems.style.display = \"flex\"\n\n  Array.from(document.getElementsByClassName(\"div_mem\")).forEach(element => {\n    element.style.display = \"none\"\n  })\n\n  Array.from(document.getElementsByClassName(\"container_video_mem\")).forEach(element => {\n    element.classList.remove('voted')\n  })\n\n  window.scrollTo(0, 0)\n\n  timeoutRoundWait()\n}\n\nfunction finishGame(){\n  document.getElementById(`div_question`).style.display = \"none\"\n  document.getElementById(`div_round_result`).style.display = \"none\"\n\n  sendRequest('post', 'get_game_winner', {game_id: data_game.id})\n    .then(data => {\n      setGameUsers(data.users)\n\n      data.winners_ids.forEach(id => {\n        document.querySelector(`.div_player[data-id=\"${id}\"]`).classList.add(\"winner\")\n      })\n\n      document.getElementById(`div_question`).style.display = \"block\"\n      document.getElementById(`game_question`).innerText = \"Еще игру?\"\n\n      document.getElementById(`container_finish_game`).style.display = \"block\"\n\n      document.getElementById(`game_winner`).style.display = \"block\"\n      document.getElementById(`game_winner`).innerText= `Победитель ${data.winners_names}`\n\n      timeoutRestartWait()\n    })\n    .catch(err => console.log(err))\n}\n\ndocument.getElementById('btn_restart_game').addEventListener('click', function(){\n  document.getElementById(`container_finish_game`).style.display = \"none\"\n\n  document.getElementById(`game_question`).innerText = \"Ожидаем решения остальных...\"\n  \n  sendRequest('post', 'ready_to_restart', {game_id: data_game.id})\n    .then(data => {\n      if (data.error) {\n        showAlert('bad', data.error)\n      }\n      \n    })\n    .catch(err => console.log(err))\n})\n\nfunction timeoutRestartWait(){\n  if (timeout_restart_wait != null){\n    clearInterval(timeout_restart_wait)\n  }\n\n\n  timeout_restart_wait = setInterval(() => {\n    sendRequest('post', 'get_restart_update', {game_id: data_game.id})\n      .then(data => {\n        console.log(\"get_restart_update \", data)\n        progress_line.style.width = data.restart_progress_wait + \"%\"\n        container_progress_line.style.display = 'block'\n\n        setGameUsers(data.users)\n        setUsersRestart(data.game, data.users)\n\n        data.winners_ids.forEach(id => {\n          document.querySelector(`.div_player[data-id=\"${id}\"]`).classList.add(\"winner\")\n        })\n\n        if (data.ready_to_start) {\n          clearInterval(timeout_restart_wait)\n\n          if (data_game.id == data.new_game.id) {\n            window.location.reload()\n          } else {\n            startGame(data.new_game, data.user_id)\n          }\n        }\n      })\n      .catch(err => console.log(err))\n  }, UPDATE_TIME)\n}\n\n\n\nfunction showRoundMems(){\n  Array.from(document.getElementsByClassName(\"container_video_mem\")).forEach(element => {\n    element.classList.remove('voted')\n  })\n\n  progress_comment.innerText = \"\"\n  progress_line.style.width = \"0%\"\n  container_progress_line.style.display = 'none'\n\n  my_mem_video.pause();\n  div_video.style.display = \"none\"\n  document.getElementById(\"div_round_result\").style.display = \"block\"\n  div_my_mems.style.display = \"none\"\n\n  round_result.forEach((item, i) => {\n    const container = document.getElementById(`div_video_${i}`)\n    container.querySelector('.mem_sender_name').innerText = item.name\n    container.querySelector('.user_avatar').src = `/assets/mem_img/svg/mem_${item.avatar}.svg`\n    container.querySelector('source').src = `assets/mem_video/${item.mem}.mp4`\n\n    //container.querySelector('.votes_count').innerText = 0\n    //container.querySelector('.votes_count').setAttribute(\"data-user-num\", item.user_num)\n    //container.querySelector('.votes_count').style.display = \"none\"\n    container.querySelector('.mem_vote').style.display = \"none\"\n    container.querySelector('.mem_vote').style.visibility = \"visible\"\n    container.querySelector('.mem_vote').setAttribute(\"data-user-num\", item.user_num)\n\n    container.classList.remove(\"my\")\n    if (item.user_id === user_id){\n      container.classList.add(\"my\")\n      container.querySelector('.mem_vote').style.visibility = \"hidden\"\n    }\n   // document.getElementById(`mem_${i}_mp4`).src = `mems/${item.mem}.mp4`\n  })\n\n  div_video_0.style.display = \"flex\"\n  mem_0_video.load()\n  mem_0_video.play()\n}\n\n\nlet timeout_click = null\nlet clicks = 1\nbtn_click_energy.addEventListener('click', function(){\n  user_data.energy += user_data.premium ? 1.1 : 0.1\n  setEnergy(user_data.energy)\n\n  if (timeout_click != null) {\n    clearTimeout(timeout_click)\n  }\n\n  clicks += 1\n  if (clicks % 25 == 0) {\n    setClickerImg()\n  }\n  \n  timeout_click = setTimeout(() => {\n\n    sendRequest('post', 'update_energy', { energy: user_data.energy })\n    .then(data => {\n      user_data.energy = data.energy\n      setEnergy(user_data.energy)\n    })\n    .catch(err => console.log(err))\n  }, 500);\n})\n\nfunction setClickerImg(){\n  const img_num = getRandomInt(1, 114)\n  btn_click_energy.src = `assets/mem_img/svg/mem_${img_num}.svg`\n}\nfunction getRandomInt(min, max) {\n  const minCeiled = Math.ceil(min);\n  const maxFloored = Math.floor(max);\n  return Math.floor(Math.random() * (maxFloored - minCeiled) + minCeiled); // The maximum is exclusive and the minimum is inclusive\n}\n\n\n\ndocument.querySelectorAll('.nav_bottom').forEach(e => e.addEventListener('click', onClickNavigation));\n\nfunction onClickNavigation(){\n  const new_page = this.getAttribute('data-page')\n \n  document.querySelectorAll('.page_main').forEach(e => e.style.display = 'none');\n  document.querySelectorAll('.nav_bottom').forEach(e => e.classList.remove('active'));\n\n  document.querySelector(`.page_main[data-page=\"${new_page}\"]`).style.display = 'flex';\n  document.querySelector(`.nav_bottom[data-page=\"${new_page}\"]`).classList.add('active');\n  document.body.scrollTo(0, 0)\n\n  document.querySelectorAll('.nav_bottom img').forEach(e => {\n    const img_name = e.parentElement.parentElement.getAttribute('data-page')\n\n    const folder = new_page == img_name ? `selected` : `common`\n    e.src = `./img/nav/${folder}/${img_name}.svg`\n  });\n}\n\n\n\n\ndocument.getElementById('btn_tournament_register').addEventListener('click', () => {\n\n  sendRequest('post', 'register_in_tournament')\n    .then(data => {\n      if (data.error) {\n        showAlert('bad', data.error);\n        return\n      }\n\n      setUserData(data.user)\n    })\n    .catch(err => console.log(err))\n})\n\n\n\n\n\ndocument.getElementById('btn_buy_premium').addEventListener('click', () => {\n  sendRequest('post', 'get_payment_link')\n    .then(data => {\n      Telegram.WebApp.openInvoice(data.link)\n    })\n    .catch(err => console.log(err))\n})\n\nTelegram.WebApp.onEvent('invoiceClosed', function(responce) {\n  if (responce.status == 'paid') {\n    showAlert('good', `Премиум активируется в течении 2х минут`)\n  }\n});\n\n\n\ndocument.querySelectorAll('.open_premium').forEach(e => e.addEventListener('click', onClickPremium));\nfunction onClickPremium(){\n  document.getElementById('container_premium').style.display = 'block'\n}\n\n\ndocument.querySelectorAll('.bottom_container .background').forEach(e => e.addEventListener('click', onClickBackground));\nfunction onClickBackground(){\n  document.querySelectorAll('.bottom_container').forEach(e => e.style.display = 'none');\n}\n\ndocument.getElementById('btn_close_error').addEventListener('click', () => {\n  onClickBackground()\n})\n\n\n\ndocument.getElementById('current_dollars').addEventListener('click', () => {\n  showAlert('good', 'Расчетная стоимость ваших монет на момент листинга')\n})\n\ndrawChart()\nfunction drawChart() {\n  const labels = ['14.01', '30.01', '14.02', '28.02', '14.03', '30.03', '15.04', '30.04',  '15.05', '30.05',  '15.06', '30.06' ];\n  const data = {\n    labels: labels,\n    datasets: [\n      {\n        label: 'Цена',\n        data: [0.05, 0.10, 0.3, 0.5, 0.8, 1, 1.1, 1.3, 1.6, 2, 2.7, 4.1],\n        borderColor: '#FF7F5C',\n        backgroundColor: '#FF7F5C',\n      }\n    ]\n  }\n\n  const config = {\n    type: 'line',\n    data: data,\n    options: {\n      responsive: true,\n      plugins: {\n        legend: {\n          display: false,\n        }\n      },\n\n      animations: {\n        tension: {\n          duration: 1000,\n          easing: 'linear',\n          from: 1,\n          to: 0,\n          loop: true\n        }\n      },\n    },\n  };\n\n\n  const ctx = document.getElementById('profit_graph')\n  const myChart = new Chart(ctx, config);\n\n}\n\n\n\ndocument.getElementById('btn_converter').addEventListener('click', () => {\n  sendRequest('post', 'convert_energy')\n    .then(data => {\n      if (data.error){\n        showAlert('bad', data.error)\n        return\n      }\n      clicks = 0\n\n      setUserData(data.user)\n    })\n    .catch(err => console.log(err))\n\n})\n\n\nfunction sendRequest(type, url, body = null) {\n\n  const headers = {\n    'Content-type': 'application/json',\n    'TelegramData': init_data\n  }\n\n  return fetch(`${api_url}${url}`, {\n    method: type,\n    body: JSON.stringify(body),\n    headers: headers\n  }).then(response => {\n    return response.json()\n  })\n}\n\n\nfunction setCookie(name, value, days = 1600) {\n  var expires = \"\";\n  if (days) {\n    var date = new Date();\n    date.setTime(date.getTime() + (days*24*60*60*1000));\n    expires = \"; expires=\" + date.toUTCString();\n  }\n  document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\n}\nfunction getCookie(name) {\n  var matches = document.cookie.match(new RegExp(\n    \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n  ));\n  return matches ? decodeURIComponent(matches[1]) : undefined;\n}\n\nfunction deleteCookie( name ) {\n  document.cookie = name + '=undefined; expires=Thu, 01 Jan 1970 00:00:01 GMT; path=/';\n}\n\n"],"names":[],"sourceRoot":""}